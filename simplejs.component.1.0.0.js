/**
* Generated by : Mustafa Sacli
*/
/**
* Dependencies Simple scripts;
* - simplejs.common.1.0.0.js
* -
*/
$(document).ready(function () {
    checkNumberInput();
    checkIbanNumber();
    removeSpaces();
});

function checkNumberInput() {
    try {
        $(".numberCheck").keydown(function (e) {
            if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 110, 190]) !== -1 ||
                (e.keyCode == 65 && (e.ctrlKey === true || e.metaKey === true)) ||
                (e.keyCode >= 35 && e.keyCode <= 40)) {
                return;
            }
            if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                e.preventDefault();
            }
        });
    } catch (err) {
        console.error(err);
    }
}
// <input name="someid" type="number" onkeypress="return isNumberKey(event)"/>
function isNumberKey(evt) {
    var charCode = (evt.which) ? evt.which : evt.keyCode
    if (charCode > 31 && (charCode < 48 || charCode > 57))
        return false;
    return true;
}

function isDecimalKey(evt) {
    var charCode = (evt.which) ? evt.which : evt.keyCode
    if (charCode > 31 && (charCode != 46 && (charCode < 48 || charCode > 57)))
        return false;
    return true;
}

function checkIbanNumber() {
    try {
        /**
         *
         *  $('.field-name').mask('SS00 0000 0000 0000 0000 00', {
        placeholder: '____ ____ ____ ____ ____ __'
      });
         */
        $('.ibanCheck').mask('SS000000000000000000000000', {
            placeholder: 'TR________________________'
        });
    } catch (err) {
        console.error(err);
    }
}

function removeSpaces() {
    try {
        $(".neverSpace").keyup(function (e) {
            debugger;
            var id = e.target.id;
            if (isNotNullAndUndefined(id)) {
                $('#' + id).val($('#' + id).val().replace(" ", ""));
            }
        });
    } catch (err) {
        console.error(err);
    }
}

function getDropdownSelectedText(dropDownName) {
    var e = document.getElementById(dropDownName);
    var result = e.options[e.selectedIndex].text;
    return result;
}

function clearContent(div_id) {
    if (isNotNullAndUndefined($(div_id))) {
        $(div_id).html('');
    }
}

function objectifyForm(formArray) {
    //serialize data function
    var returnArray = {};

    for (var i = 0; i < formArray.length; i++) {
        returnArray[formArray[i]['name']] = formArray[i]['value'];
    }

    return returnArray;
}

function getFormValues(formId) {
    //debugger;
    var data = {};
    if (isNullOrWhiteSpace(formId)) {
        return data;
    }
    var element = document.getElementById(formId).elements;
    for (var i = 0; i < element.length; i++) {
        //debugger;
        if (isNullOrWhiteSpace(element[i].id))
            continue;

        switch (element[i].type) {
            case "hidden": data[element[i].id] = encodeAsHtml('#' + element[i].id); break;
            case "text": data[element[i].id] = encodeAsHtml('#' + element[i].id); break;
            case "checkbox": data[element[i].id] = element[i].checked; break;
            case "password": data[element[i].id] = encodeAsHtml('#' + element[i].id); break;
            case "textarea": data[element[i].id] = encodeAsHtml('#' + element[i].id); break;
            case "select-one": data[element[i].id] = encodeAsHtml('#' + element[i].id); break;
            case "input": data[element[i].id] = encodeAsHtml('#' + element[i].id); break;
            case "email": data[element[i].id] = encodeAsHtml('#' + element[i].id); break;
            case "tel": data[element[i].id] = encodeAsHtml('#' + element[i].id); break;
        }
    }
    //console.log(data);
    return data;
}

function disableComponent(componentId) {
    if (isNotNullAndUndefined($(componentId))) {
        $(componentId).prop("disabled", true);
    }
}
function enableComponent(componentId) {
    if (isNotNullAndUndefined($(componentId))) {
        $(componentId).prop("disabled", false);
    }
}

function getComponentValue(componentId) {
    let value = null;

    if (isNotNullAndUndefined(componentId)) {
        let component_id = toNullString(componentId);
        if (isNullOrWhiteSpace(component_id) === false) {

            if (component_id.startsWith('#') === false) {
                component_id = '#' + component_id;
            }

            value = $(component_id).val();
        }
    }

    return value;
}

function setComponentValue(componentId, value) {
    if (isNotNullAndUndefined(componentId)) {
        let component_id = toNullString(componentId);
        if (isNullOrWhiteSpace(component_id) === false) {

            if (component_id.startsWith('#') === false) {
                component_id = '#' + component_id;
            }

            if (isNotNullAndUndefined($(component_id))) {
                $(component_id).val(value);
            }
        }
    }
}

function removeTableColumn(tableId, columnIndex) {
    if (isNotNullAndUndefined($(tableId))) {
        $(tableId + ' tr').find('th:eq(' + columnIndex + '), td:eq(' + columnIndex + ')').remove();
    }
}

function loadDropDown(dropDownId, dropDownUrl, selectedValue, defaultText = "Seçiniz",
    valueProperty = "Value", textProperty = "Text", logReturnKeys = false) {
    let dropdown = $('#' + dropDownId);
    if (dropdown === null || dropdown === undefined)
        return;

    dropdown.empty();

    if (dropDownUrl === null || dropDownUrl === undefined)
        return;

    dropdown.append('<option value = "">' + defaultText + '</option>');

    if (textProperty === null || textProperty === undefined || valueProperty === null || valueProperty === undefined)
        return;

    $.getJSON(dropDownUrl, function (data) {
        $.each(data, function (key, entry) {
            dropdown.append($('<option></option>')
                .attr('value', entry[valueProperty])
                .text(entry[textProperty]));

            if (logReturnKeys)
                console.log(key);
        });
    }).done(function () {
        if (isNotNullAndUndefined(selectedValue)) {
            //setTimeout(function () {
            dropdown.val(selectedValue);
            //}, 500);
            // console.log(selectedValue);
        } else {
            dropdown.prop('selectedIndex', 0);
        }
    });
}

function loadDropDownV3(dropDownId, dropDownUrl, selectedValue, defaultText = "Seçiniz",
    valueProperty = "Value", textProperty = "Text", url_values, error_function) {
    let dropDown = $('#' + dropDownId);

    if (isNotNullAndUndefined(dropDown) === false)
        throw new Error('dropdown element not found.');

    dropDown.empty();

    if (isNotNullAndUndefined(dropDownUrl) === false || isNullOrWhiteSpace(toNullString(dropDownUrl)))
        throw new Error('Ajax request url should be defined.');

    if (isNullOrWhiteSpace(defaultText) === false) {
        dropDown.append('<option value="">' + defaultText + '</option>');
    }

    if (isNotNullAndUndefined(textProperty) === false)
        throw new Error('text property for ajax request should be defined.');

    if (isNotNullAndUndefined(valueProperty) === false)
        throw new Error('value property for ajax request should be defined.');

    $.getJSON(dropDownUrl, url_values, function (response) {
        $.each(response, function (key, entry) {
            dropDown.append($('<option></option>')
                .attr('value', entry[valueProperty])
                .text(entry[textProperty]));
        });
    }).done(function () {
        if (isNotNullAndUndefined(selectedValue) && isNullOrWhiteSpace(toNullString(selectedValue)) === false) {
            //setTimeout(function () {
            dropDown.val(selectedValue);
            //}, 500);
            // console.log(selectedValue);
        } else {
            dropDown.prop('selectedIndex', 0);
        }
    }).fail(function () {
        if (isNotNullAndUndefined(error_function)) {
            error_function();
        }
    });
}